graph(%x.1 : Float(*, *)
      %hx.1 : Float(*, *)
      %cx.1 : Float(*, *)
      %w_ih : Float(*, *)
      %w_hh : Float(*, *)
      %alpha.1 : Float(*)
      %beta_i.1 : Float(*)
      %beta_h.1 : Float(*)
      %bias : Float(*)) {
  %9 : Float(*, *) = aten::t(%w_ih)
  %Wx.1 : Float(*, *) = aten::mm(%x.1, %9)
  %11 : Float(*, *) = aten::t(%w_hh)
  %Uz.1 : Float(*, *) = aten::mm(%hx.1, %11)
  %13 : Float(*, *), %14 : Float(*, *) = prim::FusionGroup_0[device=0](%beta_h.1, %Uz.1, %beta_i.1, %Wx.1, %alpha.1)
  %15 : Dynamic[] = prim::ListConstruct(%13, %bias)
  %16 : Dynamic, %17 : Dynamic = aten::broadcast_tensors(%15)
  %hy : Float(*, *), %19 : Float(*, *), %cy : Float(*, *), %outgate.2 : Float(*, *), %cellgate.2 : Float(*, *), %forgetgate.2 : Float(*, *), %ingate.2 : Float(*, *) = prim::FusionGroup_1[device=0](%cx.1, %16, %17)
  return (%hy, %cy, %9, %Wx.1, %11, %Uz.1, %14, %ingate.2, %forgetgate.2, %cellgate.2, %outgate.2, %19);
}
with prim::FusionGroup_0 = graph(%4 : Float(*)
      %5 : Float(*, *)
      %11 : Float(*)
      %12 : Float(*, *)
      %16 : Float(*)) {
  %17 : Float(*, *) = aten::mul(%16, %12)
  %15 : Float(*, *) = aten::mul(%17, %5)
  %13 : Float(*, *) = aten::mul(%11, %12)
  %9 : int = prim::Constant[value=1]()
  %10 : Float(*, *) = aten::add(%15, %13, %9)
  %6 : Float(*, *) = aten::mul(%4, %5)
  %2 : int = prim::Constant[value=1]()
  %3 : Float(*, *) = aten::add(%10, %6, %2)
  return (%3, %17);
}
with prim::FusionGroup_1 = graph(%13 : Float(*, *)
      %39 : Dynamic
      %44 : Dynamic) {
  %45 : Dynamic, %46 : Dynamic, %47 : Dynamic, %48 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%44)
  %40 : Dynamic, %41 : Dynamic, %42 : Dynamic, %43 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%39)
  %37 : int = prim::Constant[value=1]()
  %38 : Float(*, *) = aten::add(%40, %45, %37)
  %33 : int = prim::Constant[value=1]()
  %34 : Float(*, *) = aten::add(%41, %46, %33)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(*, *) = aten::add(%42, %47, %29)
  %25 : int = prim::Constant[value=1]()
  %26 : Float(*, *) = aten::add(%43, %48, %25)
  %ingate.2 : Float(*, *) = aten::sigmoid(%38)
  %forgetgate.2 : Float(*, *) = aten::sigmoid(%34)
  %cellgate.2 : Float(*, *) = aten::tanh(%30)
  %outgate.2 : Float(*, *) = aten::sigmoid(%26)
  %14 : Float(*, *) = aten::mul(%forgetgate.2, %13)
  %11 : Float(*, *) = aten::mul(%ingate.2, %cellgate.2)
  %7 : int = prim::Constant[value=1]()
  %cy : Float(*, *) = aten::add(%14, %11, %7)
  %4 : Float(*, *) = aten::tanh(%cy)
  %hy : Float(*, *) = aten::mul(%outgate.2, %4)
  return (%hy, %4, %cy, %outgate.2, %cellgate.2, %forgetgate.2, %ingate.2);
}
